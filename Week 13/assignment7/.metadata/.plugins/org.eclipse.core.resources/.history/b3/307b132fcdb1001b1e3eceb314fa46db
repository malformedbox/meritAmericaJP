package com.meritamerica.assignment7.model.security.service;

import java.util.Arrays;
import java.util.Collection;
import java.util.List;
import java.util.Objects;
import java.util.stream.Collectors;

import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.meritamerica.assignment7.model.User;

import lombok.Data;

@Data
public class UserDetailsImpl{
	
	private Long id;
	
	private String username;
	
	@JsonIgnore
	private String password;
	
	private boolean active;
	private List<GrantedAuthority> authorities;
	
	public UserDetailsImpl() {}
	public UserDetailsImpl(Long id, String username, String password,
							String role) {
		this.id = id;
		this.username = username;
		this.password = password;
	}
    public UserDetailsImpl(User user) {
        this.username = user.getUsername();
        this.password = user.getPassword();
        this.active = user.isActive();
  
    }
	
	public static UserDetailsImpl build(User user) {
		
		return new UserDetailsImpl(
				user.getId(),
				user.getUsername(),
				user.getPassword(),
				user.getRole()
				);
	}

	public Long getId() { return id; }
	
	public String getPassword() { return password; }

	public String getUsername() { return username; }

	public boolean isAccountNonExpired() { return true;	}

	public boolean isAccountNonLocked() { return true; }

	public boolean isCredentialsNonExpired() { return true; }

	public boolean isEnabled() { return true; }
	
	@Override
	public boolean equals(Object o) {
		if (this == o)
			return true;
		if (o == null || getClass() != o.getClass())
			return false;
		UserDetailsImpl user = (UserDetailsImpl) o;
		return Objects.equals(id, user.id);
	}

}
